TODO:
- deb package
    - run as service script
    - base
    - home folder service
    - own cloud service
- compare with other implementations (owncloud, example-server, 5apps) especially for versioning stuff
- support multiple If-None-Match, If-Match, http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html

Problems:

Ideas:
    - Support several password hash functions? sha3? Is sha512 really secure?
    - Create user dir on first request (ask for password)
    - Helper to create file structure and password ?
    - Test with spdy reverse proxy
    - Test with nginx

Done:
- configure path and port
- create test data dir
- test should restore test data dir in temporary folder
- finished directory listing
- load data
- save data
    - mark ancestor folders as modified
- handle content type (save in hidden files)
    - ignore hidden files for directory listings
- delete data
    - remove ancestor dirs if empty
- handle version stuff (412 codes)
- read/write permissions handled correctly
- scopes permissions handled correctly
- public special handling
    - read access without bearer token (but no directory listing!)
    - read/write/delete access with bearer token
- think about security (breaking out the storage dir)
- change password hash to sha512
- make storage folder structure configurable in order to allow using home folder and owncloud storage
- option to configure resources (templates,css)
- chown files to bearer token username (@) or predefined user name (configurable)
    - to predefined user name (configurable)
    - apply while creating nested paths
    - to bearer token username (@)
- better path structure (app path "gors") for easier integration with reverse proxy
- test with https apache reverse proxy
    - http://wiki.ubuntuusers.de/Apache/SSL
    - https://www.digitalocean.com/community/articles/how-to-create-a-ssl-certificate-on-apache-for-ubuntu-12-04
        - sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt
    - add flag "url" to specify external base url
    - Solve problem: CORS, Chrome, self signed certificates
        - http://stackoverflow.com/questions/15115746/why-chrome-cancel-cors-option-request
        - https://code.google.com/p/chromium/issues/detail?id=141839
        - http://code.google.com/p/chromium/wiki/LinuxCertManagement
        - Solution:
            1. Export from Chrome
            2. certutil -d sql:$HOME/.pki/nssdb -A -t "P,," -n <certificate nickname> -i <certificate filename>
- Better handling of former 412: https://github.com/remotestorage/spec/issues/23#issuecomment-20686517
    - Handle with 304 for GET requests
- test on raspberry pi
    - https://wiki.debian.org/NetworkConfiguration
    - http://elinux.org/RPi_Setting_up_a_static_IP_in_Debian
- add speed tests, test speed on raspberry pi
    - test owncloud speed
    - test gors speed
    - compare